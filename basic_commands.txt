                   команды GIT
показать список файлов       - ls или ls -a
изменить активную директорию - cd <имя папки>
очистить терминал            - clear
создать директорию           - mkdir <имя>
создать файл                 - touch <имя>
скопировать файл             - copy <имя> <имя копии>
переименовать файл           - mv <имя> <новое имя>
записать в файл              - echo 'текст' > <имя файла>
посмотреть содержимое файла  - cat <имя файла>
удалить файл                 - rm <имя файла>
удалить папку(сначала выйди!)- rm -R <имя папки>

инициализировать папку       - git init
создать связь локал и удален - git remote add origin https://github.com/....... .git
проверка звязи               - git remote -v

проверка состояния           - git status
добавить все тзменения       - git add .
добавить изменния в индекс   - git add <file>
отменить изм. до предыдущего - git restore <file>
создать коммит               - git commit -m '....'
                             - git commit -am '....'

сохранять пустые директории   .gitkeep
                               touch <имя>/.gitkeep
игнорировать некоторые файлы  .gitignore

просмотр истории изменений   - git log
компактный просмотр истории  - git log --oneline
просмотр истории действий    - git reflog
сброс текущего состояния историй - git reset
отмена последствий коммита   - git revert

просмотр веток               - git branch
создать ветку                - git branch <имя ветки>
переключиться на ветку       - git checkout <имя ветки>

создать ветку с другой ветки - git branch <имя ветки> <имя стартовой ветки>
создать ветку и переключиться на неё -git checkout -b <имя ветки>
слияние веток                - git merge <имя ветки>
удаление ветки               - git branch -d <имя ветки>
смена старта ветки           - git rebase main
(производится с текущей ветки на основную)

создав репозиторий нужно настроить SSH
сгененрировать ключ  - ssh-keygen

клонирование репозитория     - git clone <путь github> <имя папки куда клонируем>

загрузить на GitHub          - git push
                             - git push --forse(принудительно)
с текущей ветки на origin ветку
	-git push --set-upstrim origin <имя с какой ветки>
	-git push -u origin <имя с какой ветки>

загрузить c GitHub	     - git pull
обновить синхронизацию       - git fetch

создать новую версию         - git tag <имя версии(например 1.0.0)>
проверить запись тега        - git tag
загрузить на удаленный репозиторий      - git push --tags
удаления тега в локальном репозитории   - git tag -d <tagname>
удаление тега из удалённого репозитория - git push origin --delete <tagname>

	Difficult operations Git

1. Переключение веток при несохраненных данных
	git stash - выгрузка изменений во временное хранилище
		WIP -work in progress - on main
	git stash list - просмотр временного хранилища
	git stash push <имя файла> - добавить файл в WIP
	git stash pop - отменить stash

2. Склеивание коммитов в один
	git rebase -i HEAD~<количество коммитов>
	git push force

3. Перенос коммитов с одной на другую ветку
		Cherry Pick
	git cherry-pick <хеш коммита> - перенос коммита на текущую ветку
	git cherry-pick <имя ветки> - перенос последний коммит ветки
	git cherry-pick ..<имя ветки> - перенос всех коммитов с ветки

4. Перезапись коммита 
	git commit --amend

5. Решение конфликтов при объединении веток или подгрузке из репозитория
	в ручном режиме MERGE (объеденяем)
	git merge --abort - отменить объединение
		или
	открыть редактор VI и отредактировать изменение
	vi <имя файла который нужно отредактировать>